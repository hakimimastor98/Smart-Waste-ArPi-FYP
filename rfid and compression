#include <Servo.h> 
#include <SPI.h>
#include <MFRC522.h>

#define RST_PIN         5          // Configurable, see typical pin layout above
#define SS_PIN          53
#define trigPin 9
#define echoPin 8
Servo myservo2;
#define LED_G 26 //define green LED pin
#define LED_R 24 //define red LED
#define BUZZER 22 //buzzer pin
int thresh [11] = {25,23,21,19,17,15,13,11,9,7,5};
Servo myservo;
MFRC522 mfrc522(SS_PIN, RST_PIN);
void setup() 
{ 
  Serial.begin(9600);
  SPI.begin();
  mfrc522.PCD_Init();   // Initiate MFRC522
  myservo2.attach(6); //servo pin
  myservo2.write(0); //servo start position
  pinMode(trigPin, OUTPUT);
  digitalWrite(trigPin, LOW);
  pinMode(echoPin, INPUT);
  myservo.attach(2);
  myservo.write(89.8);
  //myservo.writeMicroseconds(1500);  // set servo to mid-point
}
void rfidreading(){
  // Look for new cards
  if ( ! mfrc522.PICC_IsNewCardPresent()) 
  {
    return;
  }
  // Select one of the cards
  if ( ! mfrc522.PICC_ReadCardSerial()) 
  {
    return;
  }
  //Show UID on serial monitor
  Serial.print("UID tag :");
  String content= "";
  byte letter;
  for (byte i = 0; i < mfrc522.uid.size; i++) 
  {
     Serial.print(mfrc522.uid.uidByte[i] < 0x10 ? " 0" : " ");
     Serial.print(mfrc522.uid.uidByte[i], HEX);
     content.concat(String(mfrc522.uid.uidByte[i] < 0x10 ? " 0" : " "));
     content.concat(String(mfrc522.uid.uidByte[i], HEX));
  }
  //Serial.println();
  //Serial.print("Message : ");
  content.toUpperCase();
  if (content.substring(1) == "89 D4 7C 48") //change here the UID of the card/cards that you want to give access
  {
    //Serial.println("Authorized access");
    //Serial.println();
    delay(500);
    digitalWrite(LED_G, HIGH);
    tone(BUZZER, 500);
    delay(300);
    noTone(BUZZER);
    myservo2.write(180);
    delay(5000);
    myservo2.write(90);
    digitalWrite(LED_G, LOW);
  }
 
 else   {
    //Serial.println(" Access denied");
    digitalWrite(LED_R, HIGH);
    tone(BUZZER, 300);
    delay(1000);
    digitalWrite(LED_R, LOW);
    noTone(BUZZER);
  }
 } 

void compressor(){
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);
  long duration = pulseIn(echoPin, HIGH);
  long distance = (duration/2) / 29.1;
  Serial.print(distance);
  Serial.println(" cm");
  if(distance<thresh[0]&&distance>=thresh[1]){
    Serial.print(", 10% Full");
    
    
    
    }
  else if(distance<thresh[1]&&distance>=thresh[2]){
    Serial.print(", 20% Full");
    
    
  }
  else if(distance<thresh[2]&&distance>=thresh[3]){
    Serial.print(", 30% Full");
    
    
  }
  else if(distance<thresh[3]&&distance>=thresh[4]){
    Serial.print(", 40% Full");
    
   
  }
  else if(distance<thresh[4]&&distance>=thresh[5]){
    Serial.print(", 50% Full");
    
    
  }
  else if(distance<thresh[5]&&distance>=thresh[6]){
   Serial.print(", 60% Full");
    
  }
  else if(distance<thresh[6]&&distance>=thresh[7]){
    Serial.print(", 70% Full");
    
    
    
  }
  else if(distance<thresh[7]&&distance>=thresh[8]){
    Serial.print(", 80% Full");
    myservo.write(100);
    delay(1350);
    myservo.write(80);
    delay(2400);
    myservo.write(89.8);
    
    
   
  }
  else if(distance<thresh[8]&&distance>=thresh[9]){
    Serial.print(", 90% Full");
    myservo.write(100);
    delay(1350);
    myservo.write(80);
    delay(2400);
    myservo.write(89.8);
    
    
    
  }
  else if(distance<thresh[9]&&distance>=thresh[10]){
    Serial.print(", 100% Full");
    myservo.write(100);
    delay(1350);
    myservo.write(80);
    delay(2400);
    myservo.write(89.8);
  }
  else{
    Serial.print(", Empty"); // Empty will print if you take the sensor out of the bin or the sensor is not getting a reading
    //myservo.write(89.5);
  }
  delay(1200);
  
  }
void loop() {
  rfidreading();
  compressor();
  
  } 
